{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","to","pathname","state","src","alt","map","genre","index","slice","ProtoType","PropTypes","number","isRequired","string","arrayOf","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","About","props","console","log","Detail","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"mXAKA,SAASA,EAAT,GAA8D,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OACjD,OACI,qBAAKC,UAAU,QAAf,SACE,eAAC,IAAD,CACEC,GAAI,CACFC,SAAS,UAAD,OAAYR,GACpBS,MAAO,CACLR,OACAC,QACAC,UACAC,SACAC,WARN,UAYE,qBAAKK,IAAKN,EAAQO,IAAKT,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SACGD,EAAOO,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBR,UAAU,gBAA1B,SACGO,GADMC,QAKb,oBAAGR,UAAU,iBAAb,UAA+BH,EAAQY,MAAM,EAAG,KAAhD,iBASZhB,EAAMiB,UAAY,CACdhB,GAAIiB,IAAUC,OAAOC,WACrBlB,KAAMgB,IAAUC,OAAOC,WACvBjB,MAAOe,IAAUG,OAAOD,WACxBhB,QAASc,IAAUG,OAAOD,WAC1Bf,OAAQa,IAAUG,OAAOD,WACzBd,OAAQY,IAAUI,QAAQJ,IAAUG,QAAQD,YAGjCpB,QCIAuB,G,kNA/Cbb,MAAQ,CACNc,WAAW,EACXC,OAAQ,I,EAIVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,6DANQ,gBAGCJ,EAHD,EAERK,KACEA,KAAOL,OAKX,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IARzB,2C,uDAUZ,WACEQ,KAAKN,c,oBAEP,WACE,MAA8BM,KAAKtB,MAA3Bc,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,OACI,yBAASlB,UAAU,YAAnB,SACGiB,EACC,qBAAKjB,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGA,qBAAKA,UAAU,SAAf,SACGkB,EAAOZ,KAAI,SAAAoB,GAAK,OACf,cAAC,EAAD,CAEEhC,GAAIgC,EAAMhC,GACVC,KAAM+B,EAAM/B,KACZC,MAAO8B,EAAM9B,MACbC,QAAS6B,EAAM7B,QACfC,OAAQ4B,EAAMC,mBACd5B,OAAQ2B,EAAM3B,QANT2B,EAAMhC,e,GAhCZkC,IAAMC,Y,MCWVC,MAbf,SAAeC,GAEb,OADAC,QAAQC,IAAIF,GAEV,sBAAK/B,UAAU,mBAAf,UACE,gJAIA,kECOSkC,E,uKAfb,WACE,MAA8BT,KAAKM,MAA3BI,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aACKC,IAAnBF,EAAShC,OACXiC,EAAQE,KAAK,O,oBAGjB,WACE,IAAQH,EAAaV,KAAKM,MAAlBI,SACR,OAAIA,EAAShC,MACJ,+BAAOgC,EAAShC,MAAMP,QAEtB,S,GAZQgC,IAAMC,W,MCWZU,MATf,WACI,OACA,sBAAKvC,UAAU,MAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uB,MCWOuC,MATf,WACE,OAAO,eAAC,IAAD,WACL,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW3B,IACxC,cAAC,IAAD,CAAOyB,KAAK,SAASE,UAAWb,IAChC,cAAC,IAAD,CAAOW,KAAK,aAAaE,UAAWT,QCXxCU,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.deba2f6c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ id, year, title, summary, poster, genres }) {\r\n  return (\r\n      <div className=\"movie\">\r\n        <Link\r\n          to={{\r\n            pathname: `/movie/${id}`,\r\n            state: {\r\n              year,\r\n              title,\r\n              summary,\r\n              poster,\r\n              genres\r\n            }\r\n          }}\r\n        >\r\n          <img src={poster} alt={title} title={title} />\r\n          <div className=\"movie__data\">\r\n            <h3 className=\"movie__title\">{title}</h3>\r\n            <h5 className=\"movie__year\">{year}</h5>\r\n            <ul className=\"movie__genres\">\r\n              {genres.map((genre, index) => (\r\n                <li key={index} className=\"genres__genre\">\r\n                  {genre}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n  );\r\n}\r\n  \r\n\r\n// propsTypes는 number, string, bool, func, node등 다양하게 존재\r\nMovie.ProtoType = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;\r\n// export해줘야 다른 js에서 Movie라는 component를 사용가능","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\";\r\n\r\nclass Home extends React.Component{\r\n  state = {\r\n    isLoading: true,\r\n    movies: []\r\n  };\r\n  // 비동기 함수로 -> function()앞에 async 키워드\r\n  // await 키워드 Promise기반 함수 앞에 놓음 -> 코드 완료까지 기다림\r\n  getMovies = async () => {\r\n    const {\r\n      data: {\r\n        data: {movies}\r\n      }\r\n    } = await axios.get(\r\n      \"https://yts.mx/api/v2/list_movies.json?sort_by=like_count\"\r\n    );\r\n    this.setState({ movies, isLoading: false });  // movies:movies 로 써도 됨\r\n  };\r\n  componentDidMount(){\r\n    this.getMovies();\r\n  } \r\n  render(){\r\n    const { isLoading, movies } = this.state;\r\n    return (\r\n        <section className=\"container\">\r\n          {isLoading ? (\r\n            <div className=\"loader\">\r\n              <span className=\"loader__text\">Loading...</span>\r\n            </div>\r\n            ) : (\r\n              <div className=\"movies\">\r\n                {movies.map(movie => (\r\n                  <Movie\r\n                    key={movie.id}\r\n                    id={movie.id}\r\n                    year={movie.year}\r\n                    title={movie.title}\r\n                    summary={movie.summary}\r\n                    poster={movie.medium_cover_image}\r\n                    genres={movie.genres}\r\n                  />\r\n                ))}\r\n              </div>\r\n            )}\r\n        </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n/*\r\nClass Components and State\r\n  function component는 function이고 return을 통해 screen에 표시\r\n  class component는 class이고 react component로 부터 확장되고 screen에 표시\r\n  react는 자동적으로 class component의 render method를 실행한다.\r\n\r\n  state는 object이다.\r\n  state에는 바꾸고 싶은 data를 넣는다.\r\n\r\n  button에는 onClick이라는 prop이 기본적으로 있다.\r\n  this.add()에서 ()는 즉시 함수를 호출해라는 것이고,\r\n  this.add는 click했을 때만 함수를 호출하는 것이다.\r\n\r\nComponent Life Cycle\r\n※ Mounting - component의 태어남\r\n  constructor()\r\n    -JavaScript에서 class를 만들 때 호출되는 것\r\n    -coponent가 mount될 때 호출됨\r\n  componentDidMount()\r\n    -component가 처음 render될 때 호출됨\r\n\r\n※ Updating\r\n  componentDidUpdate()\r\n    -componet가 업데이트될 때 호출됨\r\n\r\n※ Unmounting - coponent가 죽는 것\r\n  componentWillUnmount()\r\n    -component가 떠날 때 호출됨\r\n\r\nsetState()를 호출 => component를 호출 => render를 호출\r\n=> 업데이트 완료 후 coponentDidUpdate() 실행\r\n\r\nstate 선언은 필수가 아니다.\r\n*/","import React from \"react\";\r\nimport \"./About.css\";\r\n\r\nfunction About(props) {\r\n  console.log(props);\r\n  return (\r\n    <div className=\"about__container\">\r\n      <span>\r\n        “Freedom is the freedom to say that two plus two make four. If that is\r\n        granted, all else follows.”\r\n      </span>\r\n      <span>− George Orwell, 1984</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\n\r\nclass Detail extends React.Component {\r\n  componentDidMount() {\r\n    const { location, history } = this.props;\r\n    if (location.state === undefined) {\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n  render() {\r\n    const { location } = this.props;\r\n    if (location.state) {\r\n      return <span>{location.state.title}</span>;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\nexport default Detail;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nfunction Navigation(){\r\n    return (\r\n    <div className=\"nav\">\r\n        <Link to=\"/\">Home</Link>\r\n        <Link to=\"/about\">About</Link>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\"; \nimport Home from \"./routes/Home\";\nimport About from \"./routes/About\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./components/Navigation\";\nimport \"./App.css\";\n\n// 두 개의 중요한 props가 필요합니다. \n// 하나는 렌더링할 화면이고 다른 하나는 수행 할 URL입니다.\nfunction App() {\n  return <HashRouter>\n    <Navigation />\n    <Route path=\"/\" exact={true} component={Home} />\n    <Route path=\"/about\" component={About} />\n    <Route path=\"/movie/:id\" component={Detail} />\n  </HashRouter>\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}